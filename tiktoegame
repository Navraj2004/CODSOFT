#include <iostream>
#include <vector>
#include<stdio.h>

using namespace std;

const int SIZE = 3; 
void iniboard(vector<vector<char>>& board) {
    for (int i = 0; i < SIZE; ++i) {
        for (int j = 0; j < SIZE; ++j) {
            board[i][j] = ' ';
        }
    }
}


void printBoard(const vector<vector<char>>& board) {
    cout << "  0 1 2" << endl;
    for (int i = 0; i < SIZE; ++i) {
        cout << i << ' ';
        for (int j = 0; j < SIZE; ++j) {
            cout << board[i][j];
            if (j < SIZE - 1) cout << '|';
        }
        cout << endl;
        if (i < SIZE - 1) {
            cout << "  -----" << endl;
        }
    }
}


bool cw(const vector<vector<char>>& board, char player) {
 
    for (int i = 0; i < SIZE; ++i) {
        if ((board[i][0] == player && board[i][1] == player && board[i][2] == player) ||
            (board[0][i] == player && board[1][i] == player && board[2][i] == player)) {
            return true;
        }
    }
  
    if ((board[0][0] == player && board[1][1] == player && board[2][2] == player) ||
        (board[0][2] == player && board[1][1] == player && board[2][0] == player)) {
        return true;
    }
    return false;
}

bool checkFull(const vector<vector<char>>& board) {
    for (int i = 0; i < SIZE; ++i) {
        for (int j = 0; j < SIZE; ++j) {
            if (board[i][j] == ' ') return false;
        }
    }
    return true;
}


int main() {
    vector<vector<char>> board(SIZE, vector<char>(SIZE));
    char recentperson = 'X';
    bool gameWon = false;
    int row, col;

    iniBoard(board);

    while (true) {
        printBoard(board);

        cout << "Player " << recentperson << ", enter row and column (0, 1, 2): ";
        cin >> row >> col;

        if (row < 0 || row >= SIZE || col < 0 || col >= SIZE || board[row][col] != ' ') {
            cout << "Invalid move. Try again." << endl;
            continue;
        }

        board[row][col] = recentperson;

        if (cw(board, recentperson)) {
            printBoard(board);
            cout << "Player " << recentperson << " wins!" << endl;
            gameWon = true;
            break;
        }

        if (checkFull(board)) {
            printBoard(board);
            cout << "It's a draw!" << endl;
            break;
        }

       
        recentperson = (recentperson == 'X') ? 'O' : 'X';
    }

    return 0;
}
